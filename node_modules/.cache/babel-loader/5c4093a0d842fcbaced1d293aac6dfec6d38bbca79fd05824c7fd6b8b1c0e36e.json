{"ast":null,"code":"import api from '../utils/api';\nexport async function loginAction(prevState, formData) {\n  const {\n    email,\n    password\n  } = formData;\n  if (!email || !password) {\n    return {\n      error: \"Please fill in all fields\"\n    };\n  }\n  try {\n    await api.post('/auth/login', {\n      email,\n      password\n    }, {\n      withCredentials: true\n    });\n    return {\n      error: \"\"\n    };\n  } catch (err) {\n    var _err$response, _err$response$data;\n    return {\n      error: (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Login failed\"\n    };\n  }\n}\nexport async function registerAction(prevState, formData) {\n  const {\n    name,\n    email,\n    password\n  } = formData;\n  if (!name || !email || !password) {\n    return {\n      error: \"Please fill in all fields\"\n    };\n  }\n  try {\n    await api.post('/auth/register', {\n      name,\n      email,\n      password\n    }, {\n      withCredentials: true\n    });\n    return {\n      error: \"\"\n    };\n  } catch (err) {\n    var _err$response2, _err$response2$data;\n    return {\n      error: (err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Registration failed\"\n    };\n  }\n}\nexport async function logout() {\n  try {\n    await api.post('/auth/logout', {}, {\n      withCredentials: true\n    });\n  } catch (err) {\n    console.error('Logout failed', err);\n  }\n}\nexport async function fetchUser() {\n  try {\n    const response = await api.get('/auth/user', {\n      withCredentials: true\n    });\n    return response.data; // { id, name, email }\n  } catch (err) {\n    return null;\n  }\n}","map":{"version":3,"names":["api","loginAction","prevState","formData","email","password","error","post","withCredentials","err","_err$response","_err$response$data","response","data","message","registerAction","name","_err$response2","_err$response2$data","logout","console","fetchUser","get"],"sources":["C:/Full-Stack/Ai-Workout/Project-Ai-Workuot/client/src/services/authService.ts"],"sourcesContent":["import api from '../utils/api';\r\n\r\nexport async function loginAction(\r\n  prevState: any,\r\n  formData: { email: string; password: string }\r\n) {\r\n  const { email, password } = formData;\r\n  if (!email || !password) {\r\n    return { error: \"Please fill in all fields\" };\r\n  }\r\n  try {\r\n    await api.post('/auth/login', { email, password }, { withCredentials: true });\r\n    return { error: \"\" }; \r\n  } catch (err: any) {\r\n    return { error: err?.response?.data?.message || \"Login failed\" };\r\n  }\r\n}\r\n\r\nexport async function registerAction(\r\n  prevState: any,\r\n  formData: { name: string; email: string; password: string }\r\n) {\r\n  const { name, email, password } = formData;\r\n\r\n  if (!name || !email || !password) {\r\n    return { error: \"Please fill in all fields\" };\r\n  }\r\n  try {\r\n    await api.post('/auth/register', { name, email, password }, { withCredentials: true });\r\n    return { error: \"\" };\r\n  } catch (err: any) {\r\n    return { error: err?.response?.data?.message || \"Registration failed\" };\r\n  }\r\n}\r\n\r\nexport async function logout() {\r\n  try {\r\n    await api.post('/auth/logout', {}, { withCredentials: true });\r\n  } catch (err) {\r\n    console.error('Logout failed', err);\r\n  }\r\n}\r\n\r\nexport async function fetchUser() {\r\n  try {\r\n    const response = await api.get('/auth/user', { withCredentials: true });\r\n    return response.data; // { id, name, email }\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,cAAc;AAE9B,OAAO,eAAeC,WAAWA,CAC/BC,SAAc,EACdC,QAA6C,EAC7C;EACA,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGF,QAAQ;EACpC,IAAI,CAACC,KAAK,IAAI,CAACC,QAAQ,EAAE;IACvB,OAAO;MAAEC,KAAK,EAAE;IAA4B,CAAC;EAC/C;EACA,IAAI;IACF,MAAMN,GAAG,CAACO,IAAI,CAAC,aAAa,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAC,EAAE;MAAEG,eAAe,EAAE;IAAK,CAAC,CAAC;IAC7E,OAAO;MAAEF,KAAK,EAAE;IAAG,CAAC;EACtB,CAAC,CAAC,OAAOG,GAAQ,EAAE;IAAA,IAAAC,aAAA,EAAAC,kBAAA;IACjB,OAAO;MAAEL,KAAK,EAAE,CAAAG,GAAG,aAAHA,GAAG,wBAAAC,aAAA,GAAHD,GAAG,CAAEG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAbD,aAAA,CAAeG,IAAI,cAAAF,kBAAA,uBAAnBA,kBAAA,CAAqBG,OAAO,KAAI;IAAe,CAAC;EAClE;AACF;AAEA,OAAO,eAAeC,cAAcA,CAClCb,SAAc,EACdC,QAA2D,EAC3D;EACA,MAAM;IAAEa,IAAI;IAAEZ,KAAK;IAAEC;EAAS,CAAC,GAAGF,QAAQ;EAE1C,IAAI,CAACa,IAAI,IAAI,CAACZ,KAAK,IAAI,CAACC,QAAQ,EAAE;IAChC,OAAO;MAAEC,KAAK,EAAE;IAA4B,CAAC;EAC/C;EACA,IAAI;IACF,MAAMN,GAAG,CAACO,IAAI,CAAC,gBAAgB,EAAE;MAAES,IAAI;MAAEZ,KAAK;MAAEC;IAAS,CAAC,EAAE;MAAEG,eAAe,EAAE;IAAK,CAAC,CAAC;IACtF,OAAO;MAAEF,KAAK,EAAE;IAAG,CAAC;EACtB,CAAC,CAAC,OAAOG,GAAQ,EAAE;IAAA,IAAAQ,cAAA,EAAAC,mBAAA;IACjB,OAAO;MAAEZ,KAAK,EAAE,CAAAG,GAAG,aAAHA,GAAG,wBAAAQ,cAAA,GAAHR,GAAG,CAAEG,QAAQ,cAAAK,cAAA,wBAAAC,mBAAA,GAAbD,cAAA,CAAeJ,IAAI,cAAAK,mBAAA,uBAAnBA,mBAAA,CAAqBJ,OAAO,KAAI;IAAsB,CAAC;EACzE;AACF;AAEA,OAAO,eAAeK,MAAMA,CAAA,EAAG;EAC7B,IAAI;IACF,MAAMnB,GAAG,CAACO,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,EAAE;MAAEC,eAAe,EAAE;IAAK,CAAC,CAAC;EAC/D,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZW,OAAO,CAACd,KAAK,CAAC,eAAe,EAAEG,GAAG,CAAC;EACrC;AACF;AAEA,OAAO,eAAeY,SAASA,CAAA,EAAG;EAChC,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMZ,GAAG,CAACsB,GAAG,CAAC,YAAY,EAAE;MAAEd,eAAe,EAAE;IAAK,CAAC,CAAC;IACvE,OAAOI,QAAQ,CAACC,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOJ,GAAG,EAAE;IACZ,OAAO,IAAI;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}