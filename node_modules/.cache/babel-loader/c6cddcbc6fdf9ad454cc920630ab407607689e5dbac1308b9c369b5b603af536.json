{"ast":null,"code":"var _jsxFileName = \"C:\\\\Full-Stack\\\\Ai-Workout\\\\Project-Ai-Workuot\\\\client\\\\src\\\\components\\\\molecules\\\\ProfileEdit.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport InputField from '../atoms/InputField';\nimport SelectField from '../atoms/SelectField';\nimport Avatar from '../atoms/Avatar';\nimport styles from '../../styles/ProfileEdit.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst goals = [{\n  value: 'muscle_gain',\n  label: 'Muscle Gain'\n}, {\n  value: 'fat_loss',\n  label: 'Fat Loss'\n}, {\n  value: 'endurance',\n  label: 'Endurance'\n}];\nconst ProfileEdit = ({\n  initialWeight,\n  initialGoal,\n  avatarSrc\n}) => {\n  _s();\n  const [weight, setWeight] = useState(initialWeight);\n  const [goal, setGoal] = useState(initialGoal);\n  const [avatar, setAvatar] = useState(avatarSrc);\n  const handleAvatarChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = ev => {\n        var _ev$target;\n        return setAvatar((_ev$target = ev.target) === null || _ev$target === void 0 ? void 0 : _ev$target.result);\n      };\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.edit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleAvatarChange,\n        className: styles.avatarInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Weight\", /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"number\",\n        value: weight,\n        onChange: e => setWeight(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Goal\", /*#__PURE__*/_jsxDEV(SelectField, {\n        options: goals,\n        value: goal,\n        onChange: e => setGoal(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileEdit, \"Zwmltf9qV8I19AIDTQSi31YBxjE=\");\n_c = ProfileEdit;\nexport default ProfileEdit;\nvar _c;\n$RefreshReg$(_c, \"ProfileEdit\");","map":{"version":3,"names":["React","useState","InputField","SelectField","Avatar","styles","jsxDEV","_jsxDEV","goals","value","label","ProfileEdit","initialWeight","initialGoal","avatarSrc","_s","weight","setWeight","goal","setGoal","avatar","setAvatar","handleAvatarChange","e","target","files","reader","FileReader","onload","ev","_ev$target","result","readAsDataURL","className","edit","children","src","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","avatarInput","Number","options","_c","$RefreshReg$"],"sources":["C:/Full-Stack/Ai-Workout/Project-Ai-Workuot/client/src/components/molecules/ProfileEdit.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport InputField from '../atoms/InputField';\r\nimport SelectField from '../atoms/SelectField';\r\nimport Avatar from '../atoms/Avatar';\r\nimport styles from '../../styles/ProfileEdit.module.css';\r\n\r\ninterface ProfileEditProps {\r\n  initialWeight: number;\r\n  initialGoal: string;\r\n  avatarSrc?: string;\r\n}\r\n\r\nconst goals = [\r\n  { value: 'muscle_gain', label: 'Muscle Gain' },\r\n  { value: 'fat_loss', label: 'Fat Loss' },\r\n  { value: 'endurance', label: 'Endurance' },\r\n];\r\n\r\nconst ProfileEdit: React.FC<ProfileEditProps> = ({ initialWeight, initialGoal, avatarSrc }) => {\r\n  const [weight, setWeight] = useState(initialWeight);\r\n  const [goal, setGoal] = useState(initialGoal);\r\n  const [avatar, setAvatar] = useState<string | undefined>(avatarSrc);\r\n\r\n  const handleAvatarChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const reader = new FileReader();\r\n      reader.onload = (ev) => setAvatar(ev.target?.result as string);\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.edit}>\r\n      <label>\r\n        <Avatar src={avatar} />\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleAvatarChange} className={styles.avatarInput} />\r\n      </label>\r\n      <label>\r\n        Weight\r\n        <InputField type=\"number\" value={weight} onChange={e => setWeight(Number(e.target.value))} />\r\n      </label>\r\n      <label>\r\n        Goal\r\n        <SelectField options={goals} value={goal} onChange={e => setGoal(e.target.value)} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileEdit;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}