{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport api from \"../utils/api\";\nimport { useAuth } from \"../store/auth-context\";\nexport function useWorkoutPlan() {\n  _s();\n  const [workouts, setWorkouts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    isAuthenticated\n  } = useAuth();\n  useEffect(() => {\n    if (!isAuthenticated) {\n      setError(\"User not authenticated\");\n      setLoading(false);\n      return;\n    }\n    const fetchPlan = async () => {\n      try {\n        var _res$data$workoutPlan, _res$data$workoutPlan2;\n        const res = await api.get(\"/setup/workout\", {\n          withCredentials: true\n        });\n        const fetchedWorkouts = (_res$data$workoutPlan = res.data.workoutPlan) === null || _res$data$workoutPlan === void 0 ? void 0 : (_res$data$workoutPlan2 = _res$data$workoutPlan.result) === null || _res$data$workoutPlan2 === void 0 ? void 0 : _res$data$workoutPlan2.exercises;\n        if (!fetchedWorkouts || !Array.isArray(fetchedWorkouts)) {\n          setError(\"No valid workout plan available.\");\n          setWorkouts([]);\n        } else {\n          setWorkouts(fetchedWorkouts);\n        }\n      } catch (err) {\n        console.error(\"Workout fetch error:\", err);\n        setError(\"Failed to fetch workout plan\");\n        setWorkouts([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPlan();\n  }, [isAuthenticated]);\n  return {\n    workouts,\n    loading,\n    error\n  };\n}\n_s(useWorkoutPlan, \"NSt0h2UDQnWaOvsFemD6x3DbmCw=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"names":["useEffect","useState","api","useAuth","useWorkoutPlan","_s","workouts","setWorkouts","loading","setLoading","error","setError","isAuthenticated","fetchPlan","_res$data$workoutPlan","_res$data$workoutPlan2","res","get","withCredentials","fetchedWorkouts","data","workoutPlan","result","exercises","Array","isArray","err","console"],"sources":["C:/Full-Stack/Ai-Workout/Project-Ai-Workuot/client/src/hooks/useWorkoutPlan.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Exercise } from \"../domain/models/interfaces/IExercise\";\r\nimport api from \"../utils/api\";\r\nimport { useAuth } from \"../store/auth-context\";\r\n\r\nexport interface WorkoutDay {\r\n  day: string;\r\n  exercises: Exercise[];\r\n}\r\n\r\nexport function useWorkoutPlan() {\r\n  const [workouts, setWorkouts] = useState<WorkoutDay[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n    const { isAuthenticated } = useAuth();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      setError(\"User not authenticated\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchPlan = async () => {\r\n      try {\r\n        const res = await api.get(\"/setup/workout\", {\r\n          withCredentials: true,\r\n        });\r\n\r\n        const fetchedWorkouts = res.data.workoutPlan?.result?.exercises;\r\n\r\n        if (!fetchedWorkouts || !Array.isArray(fetchedWorkouts)) {\r\n          setError(\"No valid workout plan available.\");\r\n          setWorkouts([]);\r\n        } else {\r\n          setWorkouts(fetchedWorkouts);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Workout fetch error:\", err);\r\n        setError(\"Failed to fetch workout plan\");\r\n        setWorkouts([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPlan();\r\n  }, [isAuthenticated]);\r\n\r\n  return { workouts, loading, error };\r\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,GAAG,MAAM,cAAc;AAC9B,SAASC,OAAO,QAAQ,uBAAuB;AAO/C,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAe,EAAE,CAAC;EAC1D,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAErD,MAAM;IAAEW;EAAgB,CAAC,GAAGT,OAAO,CAAC,CAAC;EAGvCH,SAAS,CAAC,MAAM;IACd,IAAI,CAACY,eAAe,EAAE;MACpBD,QAAQ,CAAC,wBAAwB,CAAC;MAClCF,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QAAA,IAAAC,qBAAA,EAAAC,sBAAA;QACF,MAAMC,GAAG,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,gBAAgB,EAAE;UAC1CC,eAAe,EAAE;QACnB,CAAC,CAAC;QAEF,MAAMC,eAAe,IAAAL,qBAAA,GAAGE,GAAG,CAACI,IAAI,CAACC,WAAW,cAAAP,qBAAA,wBAAAC,sBAAA,GAApBD,qBAAA,CAAsBQ,MAAM,cAAAP,sBAAA,uBAA5BA,sBAAA,CAA8BQ,SAAS;QAE/D,IAAI,CAACJ,eAAe,IAAI,CAACK,KAAK,CAACC,OAAO,CAACN,eAAe,CAAC,EAAE;UACvDR,QAAQ,CAAC,kCAAkC,CAAC;UAC5CJ,WAAW,CAAC,EAAE,CAAC;QACjB,CAAC,MAAM;UACLA,WAAW,CAACY,eAAe,CAAC;QAC9B;MACF,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZC,OAAO,CAACjB,KAAK,CAAC,sBAAsB,EAAEgB,GAAG,CAAC;QAC1Cf,QAAQ,CAAC,8BAA8B,CAAC;QACxCJ,WAAW,CAAC,EAAE,CAAC;MACjB,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACD,eAAe,CAAC,CAAC;EAErB,OAAO;IAAEN,QAAQ;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACrC;AAACL,EAAA,CA1CeD,cAAc;EAAA,QAKED,OAAO;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}